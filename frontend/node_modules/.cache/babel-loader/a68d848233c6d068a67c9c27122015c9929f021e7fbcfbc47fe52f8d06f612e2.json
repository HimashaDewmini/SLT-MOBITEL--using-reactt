{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\SLT_MOBITEL\\\\frontend\\\\src\\\\App.js\",\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, useLocation } from 'react-router-dom';\nimport Home from './pages/Home/home.jsx';\nimport About from './pages/About/about.jsx';\nimport Vacancies from './pages/Vacancy/vacancies.jsx';\nimport Navbar from './components/Navbar/navbar.jsx';\nimport LoginModal from './components/Login/LoginModal.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const [isLoginOpen, setIsLoginOpen] = useState(false);\n  const [hasClosedLogin, setHasClosedLogin] = useState(false); // Track if user manually closed modal\n\n  // Hook to get pathname\n  function usePathname() {\n    _s();\n    const location = useLocation();\n    return location.pathname;\n  }\n  _s(usePathname, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n    return [useLocation];\n  });\n  function ShowLoginOnHome() {\n    _s2();\n    const pathname = usePathname();\n    useEffect(() => {\n      // Show login only if on home page AND user has not closed it manually\n      if ((pathname === '/' || pathname === '/mainhome') && !hasClosedLogin) {\n        setIsLoginOpen(true);\n      } else {\n        setIsLoginOpen(false);\n      }\n    }, [pathname, hasClosedLogin]);\n    return null;\n  }\n\n  // Close handler for modal\n  _s2(ShowLoginOnHome, \"V/ldUoOTYUs0Cb2F6bbxKSn7KxI=\", false, function () {\n    return [usePathname];\n  });\n  const handleCloseLogin = () => {\n    setIsLoginOpen(false);\n    setHasClosedLogin(true); // Mark that user closed modal manually\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(ShowLoginOnHome, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      onLoginClick: () => {\n        setIsLoginOpen(true);\n        setHasClosedLogin(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), isLoginOpen && /*#__PURE__*/_jsxDEV(LoginModal, {\n      onClose: handleCloseLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/mainhome\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/vacancies\",\n        element: /*#__PURE__*/_jsxDEV(Vacancies, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s3(App, \"5PrT9pIAUIcXAeUp6cfyOW03cHc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","useLocation","Home","About","Vacancies","Navbar","LoginModal","jsxDEV","_jsxDEV","App","_s3","_s","$RefreshSig$","_s2","isLoginOpen","setIsLoginOpen","hasClosedLogin","setHasClosedLogin","usePathname","location","pathname","ShowLoginOnHome","handleCloseLogin","children","fileName","_jsxFileName","lineNumber","columnNumber","onLoginClick","onClose","path","element","_c","$RefreshReg$"],"sources":["E:/Desktop/SLT_MOBITEL/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, useLocation } from 'react-router-dom';\nimport Home from './pages/Home/home.jsx';\nimport About from './pages/About/about.jsx';\nimport Vacancies from './pages/Vacancy/vacancies.jsx';\nimport Navbar from './components/Navbar/navbar.jsx';\nimport LoginModal from './components/Login/LoginModal.jsx';\n\nfunction App() {\n  const [isLoginOpen, setIsLoginOpen] = useState(false);\n  const [hasClosedLogin, setHasClosedLogin] = useState(false); // Track if user manually closed modal\n\n  // Hook to get pathname\n  function usePathname() {\n    const location = useLocation();\n    return location.pathname;\n  }\n\n  function ShowLoginOnHome() {\n    const pathname = usePathname();\n\n    useEffect(() => {\n      // Show login only if on home page AND user has not closed it manually\n      if ((pathname === '/' || pathname === '/mainhome') && !hasClosedLogin) {\n        setIsLoginOpen(true);\n      } else {\n        setIsLoginOpen(false);\n      }\n    }, [pathname, hasClosedLogin]);\n\n    return null;\n  }\n\n  // Close handler for modal\n  const handleCloseLogin = () => {\n    setIsLoginOpen(false);\n    setHasClosedLogin(true); // Mark that user closed modal manually\n  };\n\n  return (\n    <Router>\n      <ShowLoginOnHome />\n      <Navbar onLoginClick={() => { setIsLoginOpen(true); setHasClosedLogin(false); }} />\n      {isLoginOpen && (\n        <LoginModal onClose={handleCloseLogin} />\n      )}\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/mainhome\" element={<Home />} />\n        <Route path=\"/about\" element={<About />} />\n        <Route path=\"/vacancies\" element={<Vacancies />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}