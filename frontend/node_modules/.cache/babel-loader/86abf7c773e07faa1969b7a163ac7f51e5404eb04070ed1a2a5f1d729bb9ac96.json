{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\SLT_MOBITEL\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, useLocation } from 'react-router-dom';\nimport Home from './pages/Home/home.jsx';\nimport About from './pages/About/about.jsx';\nimport Vacancies from './pages/Vacancy/vacancies.jsx';\nimport Navbar from './components/Navbar/navbar.jsx';\nimport LoginModal from './components/Login/LoginModal.jsx';\n\n// Helper component to watch route changes and control modal open state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RouteListener({\n  setIsLoginOpen,\n  setHasClosedLogin\n}) {\n  _s();\n  const location = useLocation();\n  useEffect(() => {\n    // On route change:\n    if (location.pathname === '/' || location.pathname === '/mainhome') {\n      setIsLoginOpen(prev => prev === false ? true : prev);\n      // Only open if it is currently closed\n    } else {\n      setIsLoginOpen(false);\n      setHasClosedLogin(false); // reset close flag when leaving home page\n    }\n  }, [location.pathname, setIsLoginOpen, setHasClosedLogin]);\n  return null;\n}\n_s(RouteListener, \"BXcZrDMM76mmm4zA8/QV5UbMNXE=\", false, function () {\n  return [useLocation];\n});\n_c = RouteListener;\nfunction App() {\n  _s2();\n  const [isLoginOpen, setIsLoginOpen] = useState(false);\n  const [hasClosedLogin, setHasClosedLogin] = useState(false);\n\n  // Close modal handler\n  const handleCloseLogin = () => {\n    setIsLoginOpen(false);\n    setHasClosedLogin(true); // mark as manually closed\n  };\n\n  // Navbar login button handler\n  const handleNavbarLoginClick = () => {\n    setIsLoginOpen(true);\n    setHasClosedLogin(false); // allow modal to reopen\n  };\n\n  // Prevent auto reopen if user manually closed it\n  useEffect(() => {\n    if (hasClosedLogin) {\n      setIsLoginOpen(false);\n    }\n  }, [hasClosedLogin]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(RouteListener, {\n      setIsLoginOpen: setIsLoginOpen,\n      setHasClosedLogin: setHasClosedLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      onLoginClick: handleNavbarLoginClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), isLoginOpen && !hasClosedLogin && /*#__PURE__*/_jsxDEV(LoginModal, {\n      onClose: handleCloseLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/mainhome\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/vacancies\",\n        element: /*#__PURE__*/_jsxDEV(Vacancies, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"fLyQu660NEOGQzvVPY8a/VNODSA=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"RouteListener\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","useLocation","Home","About","Vacancies","Navbar","LoginModal","jsxDEV","_jsxDEV","RouteListener","setIsLoginOpen","setHasClosedLogin","_s","location","pathname","prev","_c","App","_s2","isLoginOpen","hasClosedLogin","handleCloseLogin","handleNavbarLoginClick","children","fileName","_jsxFileName","lineNumber","columnNumber","onLoginClick","onClose","path","element","_c2","$RefreshReg$"],"sources":["E:/Desktop/SLT_MOBITEL/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, useLocation } from 'react-router-dom';\nimport Home from './pages/Home/home.jsx';\nimport About from './pages/About/about.jsx';\nimport Vacancies from './pages/Vacancy/vacancies.jsx';\nimport Navbar from './components/Navbar/navbar.jsx';\nimport LoginModal from './components/Login/LoginModal.jsx';\n\n// Helper component to watch route changes and control modal open state\nfunction RouteListener({ setIsLoginOpen, setHasClosedLogin }) {\n  const location = useLocation();\n\n  useEffect(() => {\n    // On route change:\n    if ((location.pathname === '/' || location.pathname === '/mainhome')) {\n      setIsLoginOpen((prev) => (prev === false ? true : prev)); \n      // Only open if it is currently closed\n    } else {\n      setIsLoginOpen(false);\n      setHasClosedLogin(false); // reset close flag when leaving home page\n    }\n  }, [location.pathname, setIsLoginOpen, setHasClosedLogin]);\n\n  return null;\n}\n\nfunction App() {\n  const [isLoginOpen, setIsLoginOpen] = useState(false);\n  const [hasClosedLogin, setHasClosedLogin] = useState(false);\n\n  // Close modal handler\n  const handleCloseLogin = () => {\n    setIsLoginOpen(false);\n    setHasClosedLogin(true); // mark as manually closed\n  };\n\n  // Navbar login button handler\n  const handleNavbarLoginClick = () => {\n    setIsLoginOpen(true);\n    setHasClosedLogin(false); // allow modal to reopen\n  };\n\n  // Prevent auto reopen if user manually closed it\n  useEffect(() => {\n    if (hasClosedLogin) {\n      setIsLoginOpen(false);\n    }\n  }, [hasClosedLogin]);\n\n  return (\n    <Router>\n      <RouteListener setIsLoginOpen={setIsLoginOpen} setHasClosedLogin={setHasClosedLogin} />\n\n      <Navbar onLoginClick={handleNavbarLoginClick} />\n      \n      {/* Show login modal only if isLoginOpen true and user has NOT manually closed */}\n      {(isLoginOpen && !hasClosedLogin) && (\n        <LoginModal onClose={handleCloseLogin} />\n      )}\n\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/mainhome\" element={<Home />} />\n        <Route path=\"/about\" element={<About />} />\n        <Route path=\"/vacancies\" element={<Vacancies />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}